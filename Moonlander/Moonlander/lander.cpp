#include "lander.h"
#include "uiDraw.h"

/************************************************************************
* Lander default constructor
*************************************************************************/
Lander::Lander(): alive(true), landed(false), fuel(500)
{
	pos.setY(150);
	pos.setX(0);
}

/************************************************************************
* destructor
*************************************************************************/
Lander::~Lander()
{
}

/************************************************************************
* sets lander to landed status
*************************************************************************/
void Lander::setLanded(bool b)
{
	landed = b;
}

/************************************************************************
* sets lander to given alive status
*************************************************************************/
void Lander::setAlive(bool b)
{
	alive = b;
}

/************************************************************************
* sets fuel to given int
*************************************************************************/
void Lander::setFuel(int i)
{
	fuel = i;
}

/************************************************************************
* applys gravity to lander
*************************************************************************/
void Lander::applyGravity(double x)
{
	vel.setDy(vel.getDy() - x);
}

/************************************************************************
* applies thrust to the left
*************************************************************************/
void Lander::applyThrustLeft()
{
	if (getFuel() > 0)
	{
		vel.setDx(vel.getDx() + 0.1);
		setFuel(getFuel() - 1);
	}
}

/************************************************************************
* applies thrust to the right
*************************************************************************/
void Lander::applyThrustRight()
{
	if (getFuel() > 0)
	{
		vel.setDx(vel.getDx() - 0.1);
		setFuel(getFuel() - 1);
	}
}

/************************************************************************
* Applies thrust to the bottom
*************************************************************************/
void Lander::applyThrustBottom()
{
	if (getFuel() > 0)
	{
		vel.setDy(vel.getDy() + 0.3);
		setFuel(getFuel() - 3);
	}
}

/************************************************************************
* Advances the Lander
*************************************************************************/
void Lander::advance()
{
	pos.addX(vel.getDx());
	pos.addY(vel.getDy());

	if (getFuel() < 0)
		setFuel(0);
}

/************************************************************************
* Draws lander in its position
*************************************************************************/
void Lander::draw()
{
	drawLander(pos);
}

/************************************************************************
* Resets the Lander to default position
*************************************************************************/
void Lander::reset()
{
	pos.setY(150);
	pos.setX(0);

	fuel = 500;
	setAlive(true);
	setLanded(false);

	vel.setDx(0);
	vel.setDy(0);
}
